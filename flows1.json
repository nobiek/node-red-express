[{"id":"295d5426.6846a4","type":"comment","z":"1c789a77.ddc746","name":"Pot","info":"","x":90,"y":40,"wires":[]},{"id":"a74ec35a.01cc3","type":"http in","z":"1c789a77.ddc746","name":"Pot View","url":"/pot","method":"get","upload":false,"swaggerDoc":"","x":100,"y":120,"wires":[["ac2cf739.cc714"]]},{"id":"9d53ef63.41d7b","type":"http response","z":"1c789a77.ddc746","name":"","statusCode":"","headers":{},"x":545.6666259765625,"y":114.94049072265625,"wires":[]},{"id":"bf37ffb2.e01578","type":"http in","z":"1c789a77.ddc746","name":"3GIM","url":"/iot","method":"get","upload":false,"swaggerDoc":"","x":90,"y":220,"wires":[["aa6b9020.37ea2"]]},{"id":"90a57226.8d8b78","type":"http response","z":"1c789a77.ddc746","name":"","x":905.8452033996582,"y":213.54765605926514,"wires":[]},{"id":"aa6b9020.37ea2","type":"function","z":"1c789a77.ddc746","name":"","func":"msg.payload =  {\"d\": {\n    \"myName\":msg.payload.myName,\n//    \"timestamp\": getCurrentTime(),\n    \"a\":+msg.payload.a,\n    \"l\":+msg.payload.l,\n    \"t\":+msg.payload.t,\n    \"h\":+msg.payload.h,\n    \"p\":+msg.payload.p,\n    \"z\":+msg.payload.z,\n    \"b\":+msg.payload.b,\n    \"k\":+msg.payload.k,\n    \"o\":+msg.payload.o\n}};\nreturn msg;","outputs":1,"noerr":0,"x":361.7500228881836,"y":225.2022933959961,"wires":[["90a57226.8d8b78","ac97107d.e876c8","ccadd678.51909"]]},{"id":"f77e8227.e9e84","type":"inject","z":"1c789a77.ddc746","name":"","topic":"","payload":"{ \"d\": { \"myName\": \"Bean\", \"a\": 1, \"l\": 200, \"t\": 24.00, \"h\": 53.00, \"p\": 1011.00, \"z\": 260, \"b\": 270 } }","payloadType":"string","repeat":"","crontab":"","once":false,"x":111.80952072143555,"y":279.4761371612549,"wires":[["8ec5f565.27a26"]]},{"id":"2fc36c81.116a7c","type":"debug","z":"1c789a77.ddc746","name":"","active":false,"console":"false","complete":"false","x":573.4524002075195,"y":328.15471744537354,"wires":[]},{"id":"8ec5f565.27a26","type":"json","z":"1c789a77.ddc746","name":"","x":360.2380905151367,"y":284.904691696167,"wires":[["2fc36c81.116a7c","ccadd678.51909"]]},{"id":"ac97107d.e876c8","type":"debug","z":"1c789a77.ddc746","name":"","active":false,"console":"false","complete":"payload","x":537.0952606201172,"y":171.6546516418457,"wires":[]},{"id":"ccadd678.51909","type":"mqtt out","z":"1c789a77.ddc746","name":"","topic":"iotgadget3/3GIM2","qos":"","retain":"","broker":"7c857db9.373444","x":963.6188812255859,"y":277.4284896850586,"wires":[]},{"id":"e4b073c1.0b6b9","type":"template","z":"1c789a77.ddc746","name":"","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"<!DOCTYPE html>\n<html lang=\"ja\">\n<head>\n    <meta charset=\"utf-8\">\n    <title>時間の表示</title>\n\n</head>\n<body>\n <h1 id=\"time\"></h1>\n <h2 id=\"time2\"></h2>\n \n <script>\n  // myFunc();\n  /*  function time(){\n        var now = new Date();\n        document.getElementById(\"time\").innerHTML = now.toLocaleString();\n    }\n    setInterval('time()',1000); */\n    \n    \n               // **** 時刻取得しmyIDdateに表示\n            myWeek=new Array(\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Tur\",\"Fri\",\"Sat\");\n            function myFunc(){\n                myDate=new Date();\n                myMsg = myDate.getFullYear() + \"-\";\n                myMsg += ( myDate.getMonth() + 1 ) + \"-\";\n                myMsg += myDate.getDate() + \"\";\n             //   myMsg += \"(\" + myWeek[myDate.getDay()] +  \") \";\n                myMsg += myDate.getHours() + \":\";\n                myMsg += myDate.getMinutes() + \":\";\n                myMsg += myDate.getSeconds() + \"\";  \n             //   var now = new Date(); \n                document.getElementById(\"time\").innerHTML = myMsg;\n       /*         var now = new Date();\n        document.getElementById(\"time\").innerHTML = now;*/\n            }\n         setInterval('myFunc()',1000);\n    \n  // myFunc2();\n  /*  function time(){\n        var now = new Date();\n        document.getElementById(\"time\").innerHTML = now.toLocaleString();\n    }\n    setInterval('time()',1000); */\n    \n    \n               // **** 時刻取得しmyIDdateに表示\n            myWeek=new Array(\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Tur\",\"Fri\",\"Sat\");\n            function myFunc2(){\n            /*    myDate=new Date();\n                myMsg = myDate.getFullYear() + \"-\";\n                myMsg += ( myDate.getMonth() + 1 ) + \"-\";\n                myMsg += myDate.getDate() + \"\";\n             //   myMsg += \"(\" + myWeek[myDate.getDay()] +  \") \";\n                myMsg += myDate.getHours() + \":\";\n                myMsg += myDate.getMinutes() + \":\";\n                myMsg += myDate.getSeconds() + \"\";  \n             //   var now = new Date(); \n                document.getElementById(\"time\").innerHTML = myMsg; */\n                var now = new Date();\n        document.getElementById(\"time2\").innerHTML = now;\n            }\n        setInterval('myFunc2()',1000);\n\n    </script>    \n</body>\n</html>","output":"str","x":340,"y":440,"wires":[["9e9a2670.6e0dc"]]},{"id":"290d5849.4949e","type":"http in","z":"1c789a77.ddc746","name":"","url":"/time","method":"get","upload":false,"swaggerDoc":"","x":160,"y":440,"wires":[["e4b073c1.0b6b9"]]},{"id":"9e9a2670.6e0dc","type":"http response","z":"1c789a77.ddc746","name":"","statusCode":"","headers":{},"x":540,"y":460,"wires":[]},{"id":"ac2cf739.cc714","type":"template","z":"1c789a77.ddc746","name":"Neko6 Lion4 Pot","field":"payload","fieldType":"msg","format":"html","syntax":"mustache","template":"<!DOCTYPE html>\n<html lang=\"ja\">\n    <head>\n\t    <meta charset=\"utf-8\">\n\t    <title>Flowerpot</title>\n        <!--<script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js\"></script>-->\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/Chart.js/1.0.2/Chart.js\"></script>\n        <!--<script src=\"//cdnjs.cloudflare.com/ajax/libs/Chart.js/1.0.2/Chart.min.js\"></script>-->\n        <script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.1.4/jquery.min.js\"></script>\n        <script src=\"//cdnjs.cloudflare.com/ajax/libs/lodash.js/3.9.3/lodash.min.js\"></script>\n        <script src=\"https://www.google.com/jsapi\"></script>\n\n        <style type=\"text/css\">\n            /*  *** 表とグラフを横に並べる設定　なくても動作するが上下に並ぶ　*** */\n            //#list { width:200px;height:100px;float:left; }\n            //#myChart { width:440px;height:250px;float:left; }     \n            #gauge {width:160px;height:160px;float:left; } \n            #gauge1 { width:160px;height:160px;float:left; } \n            #gauge2 { width:160px;height:160px;float:left; } \n            #gauge3 { width:160px;height:160px;float:left; } \n\n            button.button8 {\n                font-size: 0.6em;  /* 文字サイズを1.4emに指定 */\n                font-weight: bold; /* 文字の太さをboldに指定 */\n                padding: 5px 10px; /* 縦方向に10px、* 横方向に20pxの余白を指定 */\n                color: #fff; /* 文字色を白色に指定 */\n                border-style: none; /* ボーダーをなくす */\n                /* ボタンの影の指定\n                 * 影の横幅を2px\n                 * 縦長を2px\n                 * ぼかしを3px\n                 * 広がりを1px\n                 * 色を#666（グレー）に指定 */\n                box-shadow: 2px 2px 3px 1px #666;\n                -moz-box-shadow: 2px 2px 3px 1px #666;\n                -webkit-box-shadow: 2px 2px 3px 1px #666;\n                /* テキストの影の指定\n                 * 影の横幅を1px\n                 * 縦長を1px\n                 * ぼかしを2px\n                 * 色を#000（黒）に指定 */\n                text-shadow: 1px 1px 2px #000;\n                /* グラデーションの指定 */\n                background: -moz-linear-gradient(bottom, #36d, #248 50%, #36d);\n                background: -webkit-gradient(linear, left bottom, left top, from(#36d), color-stop(0.5, #248), to(#36d));\n                /* 角丸の指定 */\n                -moz-border-radius: 5px;\n                -webkit-border-radius: 5px;\n                border-radius: 5px;\n            }\n\n            button.button8:hover {\n                /* 透明度を20%に指定 */\n                opacity: 0.8;\n            }\n        </style>\n        \n        <script type=\"text/javascript\">\n            // ****  タイトルの装飾設定\n            // HTML上に次の描画エリアを作成　<canvas width=\"640\" height=\"120\" id=\"myCanvas\"></canvas>\n            $(function() {\n                // Canvasを取得\n            \tvar canvas = $(\"#myCanvas\").get(0);\n            \tif (! canvas || ! canvas.getContext) return;\n            \t// サイズを取得\n            \tvar w = canvas.width;\n            \tvar h = canvas.height;\n            \t// 2Dコンテクストを取得\n            \tvar context = canvas.getContext(\"2d\");\n            \t// 背景の作成\n            \tcontext.fillStyle = \"#ffffcc\";\t// 塗りつぶしスタイルの設定\n                //context.fillStyle = \"#4169E1\";\t// 塗りつぶしスタイルの設定\n            \tcontext.fillRect(0, 0, w, h);\t// 矩形塗りつぶし\n            \t// 枠の作成\n            \tcontext.strokeStyle = \"#eeaa66\";\t// 線描画スタイルの設定\n            \tcontext.lineWidth = 10;\t\t\t\t// 線の太さを設定\n            \tcontext.strokeRect(0, 0, w, h);\t\t// 矩形線描画\n            \t// 文字描画の共通部分を初期化\n            \tvar text = \"Pot Dashboard\";\t        // 描画する文字列\n            \tcontext.font = \"40px 'Times New Roman'\";\t// フォントの設定\n            \tcontext.textAlign = \"center\";\t\t// 文字列横位置\n            \tcontext.textBaseline = \"middle\";\t// 文字列縦位置\n            \tcontext.lineJoin = \"round\";\t\t\t// 線の角の描画方法\n            \t// 文字周辺枠\n            \tcontext.strokeStyle = \"#aa6633\";\t// 線描画スタイルの設定\n            \tcontext.lineWidth = 10;\t\t\t\t// 線の太さを設定\n            \tcontext.strokeText(text, w / 2, h / 2);\t// 文字列を線描画\n            \t// エンボス光\n            \tcontext.strokeStyle = \"#ffffff\";\t// 線描画スタイルの設定\n            \tcontext.lineWidth = 2;\t\t\t\t// 線の太さを設定\n            \tcontext.strokeText(text, w / 2 - 1, h / 2 - 1);\t// 文字列を線描画\n            \t// エンボス影\n            \tcontext.strokeStyle = \"#884422\";\t// 線描画スタイルの設定\n            \tcontext.strokeText(text, w / 2 + 1, h / 2 + 1);\t// 文字列を線描画\n            \t// 文字本体\n            \tcontext.fillStyle = \"#dd9955\";\t\t// 塗りつぶしスタイルの設定\n            \tcontext.fillText(text, w / 2, h / 2);\t// 文字列を塗りつぶし\n            });\n        \n            // **** 時刻取得しmyIDdateに表示\n            myWeek=new Array(\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Tur\",\"Fri\",\"Sat\");\n            function myFunc(){\n                myDate=new Date();\n                myMsg = myDate.getFullYear() + \"-\";\n                myMsg += ( myDate.getMonth() + 1 ) + \"-\";\n                myMsg += myDate.getDate() + \"\";\n                myMsg += \"(\" + myWeek[myDate.getDay()] +  \") \";\n                myMsg += myDate.getHours() + \":\";\n                myMsg += myDate.getMinutes() + \":\";\n                myMsg += myDate.getSeconds() + \"\";\n                document.getElementById(\"myIDdate\").innerHTML = myMsg;\n            }\n            \n            /*** 毎時、毎３０分毎にメセージを送信　***/\n            function sendMessage(){\n                var ws = new WebSocket('ws://{{req.headers.host}}/ws/message');\n                msgD = new Date();\n                msgS = msgD.getSeconds();\t//「秒」の取得 (0～59)\n                msgM = msgD.getMinutes();\t//「分」の取得 (0～59) \n                if ( msgM === 0 && msgS ===0 )  {\n                    var sendMes = document.getElementById('oth').value;  //毎時\n                       ws.onopen = function() {\n                        ws.send(sendMes);\n                        }\n                }\n                else if ( msgM == 30 && msgS ===0 ) {\n                    var sendMes = document.getElementById('othh').value; // 毎時３０\n                       ws.onopen = function() {\n                        ws.send(sendMes);\n                        }\n                }\n                else sendMes = \"hoge\";\t// 毎時３０分 \n                document.getElementById(\"myMsg\").innerHTML = sendMes;\n            }          \n             /*** メセージを送信　***/\n            function rtMessage(){\n                var ws = new WebSocket('ws://{{req.headers.host}}/ws/message');\n                    var sendMes = document.getElementById('realt').value;  //毎時\n                       ws.onopen = function() {\n                        ws.send(sendMes);\n                        }\n               document.getElementById(\"myMsg\").innerHTML = sendMes;                        \n            }               \n            \n            \n        \n            // ****  ボタンによる表示切り替え\n            // HTML上以下のボタンを作成\n            //  \t<input type=\"button\" id=\"execButton2\" value=\"データ表示\" onclick=\"dispMessage(0)\">\n            //  \t<input type=\"button\" id=\"execButton2\" value=\"グラフ表示\" onclick=\"dispMessage(1)\">\n            //      <input type=\"button\" id=\"execButton2\" value=\"ゲージ表示\" onclick=\"dispMessage(2)\">\n            var flg = 1; flg1 = 1; flg2 = 1; \n            function dispMessage(btnNo) {\n                if (btnNo == 0) {\n                    if (flg == 0) {\n                        flg = 1;\n                        document.getElementById(\"list\").style.display=\"none\";\n                    }else if (flg == 1) {\n                        flg = 0;\n                        document.getElementById(\"list\").style.display=\"\";\n                    }\n                }\n                if (btnNo == 1) {\n                    if (flg1 == 0) {\n                        flg1 = 1;\n                        document.getElementById(\"myChart\").style.display=\"none\";\n                    }else if (flg1 == 1) {\n                        flg1 = 0;\n                        document.getElementById(\"myChart\").style.display=\"\";\n                    }\n                }\n                if (btnNo == 2) {\n                    if (flg2 == 0) {\n                        flg2 = 1;\n                        document.getElementById(\"gct_sample_gauge\").style.visibility = \"hidden\";\n                    }else if (flg2 == 1) {\n                        flg2 = 0;\n                        document.getElementById(\"gct_sample_gauge\").style.visibility = \"visible\";\n                    }\n                }\n            };  \n            \n            // **** input textで数値以外の入力は消去する\n            function num_only(str){\n                var wnum = str.value;\n                // 数値以外の入力消去\n                document.getElementById(\"deltat\").value=wnum.replace(/[^\\d-.]/g,'');\n                return(str);\n            }\n\n        \n    </script>\n</head>\n\n<body>\n    <!--/*%_skip_end_%*/-->\n    <canvas width=\"640\" height=\"100\" id=\"myCanvas\"></canvas>\n    <!--/*%_skip_start_%*/-->\n    <div style =\"font-size: 12pt\" id=\"myIDdate\">Time</div>\n<!--\n    <div style =\"font-size: 12pt\" id=\"myMsg\"></div>\n-->    \n    <div> \n        Temp adjust：<input type=\"text\" id=\"deltat\" size = \"3\" style =\"font-size: 12pt\" value=\"0\" autofocus maxlength=\"3\" onblur=\"num_only(this)\">℃\n        <input type=\"button\" id=\"execButton2\" value=\"Show Table\" onclick=\"dispMessage(0)\">\n        <button id=\"peoplebutton\" class=\"button8\" type=\"submit\">Someone There</button>\n    </div>\n        <div id=\"currentpot\">Available Pot :</div>\n        <div id=\"warning\">WARNING :</div>\n    <form> \n        Select Pot : <select id=\"potname\">\n        <option value=\"\">Select Name</option>\n        <option value=\"BeanPot0\">BeanPot0</option>\n        <option value=\"BeanPot1\">BeanPot1</option>\n        <option value=\"BeanPot2\">BeanPot2</option>\n        <option value=\"BeanPot3\">BeanPot3</option>\n        <option value=\"BeanPot4\">BeanPot4</option>\n        <option value=\"BeanPot5\">BeanPot5</option>\n        <option value=\"BeanPot6\">BeanPot6</option>\n        <option value=\"BeanPot7\">BeanPot7</option>\n        <option value=\"BeanPotX\">BeanPotX</option>\n        <option value=\"Bean\">Bean</option>\n        </select>\n    <br>\n    \n        <table id = \"list\" border = \"1\">\n            <!-- <table id = \"list\" border = \"1\" style =\"font-size: 18pt\"> -->\n            <tr> \n                <td>Human</td><td align=\"right\" width=\"100\" id = \"input01\"></td> \n            </tr>\n            <tr>\n                <td>Light</td><td align=\"right\" width=\"100\" id = \"input02\"></td> \n            </tr>\n            <tr> \n                <td>Temperature</td><td align=\"right\" width=\"100\" id = \"input03\"></td> \n            </tr>\n            <tr> \n                <td>Humidity</td><td align=\"right\" width=\"100\" id = \"input04\"></td> \n            </tr>\n            <tr>\n                <td>Pressure</td><td align=\"right\" width=\"100\" id = \"input05\"></td> \n            </tr>\n            <tr> \n                <td>Posture</td><td align=\"right\" width=\"100\" id = \"input06\"></td> \n            </tr>\n            <tr>\n                <td>Voltage</td><td align=\"right\" width=\"80\" id = \"input07\"></td> \n            </tr>\n        </table>\n<!--        <div>  \n          \tOn the hour：<input type=\"text\" id=\"oth\" size = \"30\" style =\"font-size: 12pt\" \n          \tplaceholder=\"Input text\" maxlength=\"30\" >\n            <br>  \n          \tOn the half hour：<input type=\"text\" id=\"othh\" size = \"30\" style =\"font-size: 12pt\" \n          \tplaceholder=\"Input text\" maxlength=\"30\" >\n            <br>  \n          \tRealtime when hit button：<input type=\"text\" id=\"realt\" size = \"30\" style =\"font-size: 12pt\" \n          \tplaceholder=\"Input text\" maxlength=\"30\" > \n          \t<input type=\"button\" id=\"speekButton\" value=\"Speek\" onclick=\"rtMessage()\">\n        </div>\n-->        <div id=\"gauge\" ></div>\n        <div id=\"gauge1\"></div>\n        <div id=\"gauge2\"></div>\n        <div id=\"gauge3\"></div><br>\n        <!--<div id=\"gauge3\" style=\"width: 250px; height: 250px;\"></div> -->\n\n    </form>\n    <script type=\"text/javascript\">\n    /*\n        // ****  Beanに送るCommand用Websocketの設定　開始　 ****\n        var cmd = \"red\";  \n        openWs();\n        function openWs() {\n            var wsUri = \"ws://{{req.headers.host}}/ws/command\";\n            //  var ws = new WebSocket(wsUri);\n            ws = new WebSocket(wsUri); // varを付けずGlobal変数に指定\n            ws.onmessage = function(ev) {\n            var payload = JSON.parse(ev.data);\n            console.log('socket.onmessage');\n            };\n            ws.onopen = function(ev) {\n            console.log('socket.connected');\n            };\n            ws.onclose = function(ev) {\n            console.log('socket.closed');\n            //   alert(\"通信が途切れました\");\n            setTimeout(\"openWs()\", 3000);\n            }\n        }\n        // ****  Beanに送るCommand用Websocketの設定 終了 ****  \n    \n        // ****  Beanに送るCommand送信用ボタン用の設定 開始 ****  \n        function sendMessage(btnNo) {\n            if (btnNo == 0) {\n                cmd = \"red\";\n                document.getElementById(\"execButton\").style.visibility = \"hidden\";\n                document.getElementById(\"execButton1\").style.visibility = \"visible\";\n            }\n            else if (btnNo == 1) {\n                cmd = \"off\";\n                document.getElementById(\"execButton1\").style.visibility = \"hidden\";\n                document.getElementById(\"execButton\").style.visibility = \"visible\";\n                dReq= \"未指定\";\n            }\n        \n            var payload = {\n              command: cmd, \n              ts: (new Date()).getTime()\n            };\n            ws.send(JSON.stringify(payload));\n          };\n        // ****  Beanに送るCommand送信用ボタン用の設定 終了 ****    \n    */\n    \n    \n        // ****  Sensorデータ受信用Websocketの設定とリスト表示準備　開始　****\n        // 表示エリアのtextDivと表のinput01-07にデータ表示\n        dReq= \"未指定\";   // varを付けずGlobal変数に指定\n        openWs1();\n        function openWs1() {\n            var wsUri1 = \"wss://{{req.headers.host}}/ws/sensor\";\n            var ws1 = new WebSocket(wsUri1);\n            ws1.onmessage = function(message) {\n                var pot = document.getElementById('potname').value;\n                var payload_sen = JSON.parse(message.data);\n                console.log('sensor.onmessage');\n                console.log('Name  : %s', pot);\n                console.log(payload_sen);\n                var name, act, lit, temp, hum, pres, acZ, bat, key, heats_alert, loiter_alert, dry_alert, pre_alert, non_act;\n                name = payload_sen.d.myName;\n                //name = payload_sen.payload.d.myName;\n                console.log('Pot  : %s', name);\n                document.getElementById(\"currentpot\").innerHTML = \"Available Pot : \" + name;\n              \n                if(name == pot){ \n                    act = payload_sen.d.a;\n                    lit = payload_sen.d.l;\n                    temp = payload_sen.d.t;\n                    hum = payload_sen.d.h;\n                    pres = payload_sen.d.p;\n                    acZ = payload_sen.d.z;\n                    bat = payload_sen.d.b;\n                    //key = payload_sen.payload.d.k;\n\n                    heats_alert = payload_sen.heats_alert;\n                    loiter_alert = payload_sen.loiter_alert;                    \n                    dry_alert = payload_sen.dry_alert;\n                    pre_alert = payload_sen.pre_alert; \n                    non_act = payload_sen.non_act\n                    document.getElementById(\"warning\").innerHTML = \"WARNING : Heatstroke: \" + heats_alert + \"  Loiter: \" + loiter_alert +\"  Dry: \" + dry_alert +\"  Pressure: \" + pre_alert + \"  No act for: \" + non_act +\"min\";                    \n            \n                    // ****  補正温度の数値取得  ****\n                    var tempd = $(\"#deltat\").val();        // 補正値 \n                    console.log('DeltaT  : %f', tempd);\n                \n                    //***  温度シフトによる湿度補正 ***\n                    //var tempd = 1.2;        // 補正値\n                    console.log('temp  : %f', temp);  \n                    console.log('hum  : %f', hum);         \n                    var tempr = temp - tempd;　// 補正後気温\n                    console.log('tempr  : %f', tempr);    \n                    var eT = 6.1078*Math.pow(10, 7.5*temp/(temp+237.3)); // 現状気温から飽和水蒸気圧を算出\n                    console.log('eT  : %f', eT);\n                    var eTr= 6.1078*Math.pow(10, 7.5*tempr/(tempr+237.3));　// 補正気温から飽和水蒸気圧を算出\n                    console.log('eTr  : %f', eTr);\n                    var aT = 217*eT/(temp+273.15)*hum/100; // 現状相対湿度から水蒸気量を算出\n                    console.log('aT  : %f', aT);\n                    hum = aT*(tempr+273.15)/217/eTr*100; // 補正気温と水蒸気量から補正相対湿度を算出\n                    hum = Math.floor( hum * 100 ) / 100;\n                    console.log('hum  : %f', hum);\n                    temp= Math.floor( tempr * 100 ) / 100;\n                    \n\n                    \n                    /*誰か居るとボタンを表示*/\n                    if (act == 0)  document.getElementById(\"peoplebutton\").style.display=\"none\";\n                        else  document.getElementById(\"peoplebutton\").style.display=\"\";\n                \n                    // 表の内容の表示　 DOM要素指定\n                    document.getElementById( \"input01\" ).textContent = act; \n                    document.getElementById( \"input02\" ).textContent = lit+\"lx\"; \n                    document.getElementById( \"input03\"  ).textContent = temp+\"℃\"; \n                    document.getElementById( \"input04\"  ).textContent = hum+\"%\"; \n                    document.getElementById( \"input05\"  ).textContent = pres+\"hPa\"; \n                    document.getElementById( \"input06\"  ).textContent = acZ; \n                    document.getElementById( \"input07\"  ).textContent = bat/100+\"V\"; \n                    //document.getElementById( \"input08\"  ).textContent = key; \n                    gauge(temp, hum, pres, lit)\n            \n                    \n                }\n                    \n            };\n            \n            \n            ws1.onopen = function(message) {\n                console.log('sensor.connected');\n            };\n            ws1.onclose = function(message) {\n                console.log('sensor.closed');\n                //alert(\"通信が途切れました２\");\n            setTimeout(\"openWs1()\", 3000);\n            }\n        }\n        // ****  Sensorデータ受信用Websocketの設定とリスト表示準備　終了　****\n        \n        \n        // ****  Google Gaugeの表示　開始　 src=\"http://www.google.com/jsapi\"必要　****\n        google.load(\"visualization\", \"1\", {packages:[\"gauge\"]}); // 使うAPIの定義 \n        google.setOnLoadCallback(\n            gauge = function(temp, hum, pres, lit) {\n                var data = google.visualization.arrayToDataTable([\n                    [       '',  ''],\n                    ['℃', temp]\n                ]);\n                var options = {\n                    min:         -10, max:       50,  // 範囲\n                    redFrom:    36, redTo:      50,  // 赤の範囲\n                    yellowFrom: 30, yellowTo:   36,  // 黄色の範囲\n                    //greenFrom:  18, greenTo     28,   // 緑の範囲\n                    majorTicks : ['-10','0','10','20','30','40','50'],\n                    minorTicks: 5    // 小目盛りの単位 (デフォルトは 2)\n                };\n                \n                var data1 = google.visualization.arrayToDataTable([\n                    [       '',  ''],\n                    ['%',  hum]\n                ]);\n                var options1 = {\n                    min:         0, max:       100,  // 範囲\n                    redFrom:    80, redTo:      100,  // 赤の範囲\n                    yellowFrom: 70, yellowTo:   80,  // 黄色の範囲\n                    //greenFrom:  45, greenTo     65,   // 緑の範囲            \n                    majorTicks : ['0','20','40','60','80','100'],\n                    minorTicks: 5    // 小目盛りの単位 (デフォルトは 2)\n                };        \n        \n                var data2 = google.visualization.arrayToDataTable([\n                    [       '',  ''],\n                    ['hPa', pres]\n                ]);\n                var options2 = {\n                    min:         900, max:       1100,  // 範囲\n                    redFrom:    930, redTo:      960,  // 赤の範囲\n                    yellowFrom: 960, yellowTo:   990,  // 黄色の範囲\n                    //greenFrom:  45, greenTo     65,   // 緑の範囲            \n                    majorTicks : ['900','950','1000','1050','1100'],\n                    minorTicks: 5    // 小目盛りの単位 (デフォルトは 2)\n                };  \n                \n                var data3 = google.visualization.arrayToDataTable([\n                    [       '',  ''],\n                    ['lx', lit]\n                ]);\n                var options3 = {\n                    min:         0, max:       1000,  // 範囲\n                    //redFrom:    930, redTo:      950,  // 赤の範囲\n                    //yellowFrom: 970, yellowTo:   990,  // 黄色の範囲\n                    //greenFrom:  45, greenTo     65,   // 緑の範囲            \n                    majorTicks : ['0','200','400','600','800','1000'],\n                    minorTicks: 5    // 小目盛りの単位 (デフォルトは 2)\n                };  \n        \n                var chart = new google.visualization.Gauge(\n                    document.getElementById(\"gauge\"));\n                var chart1 = new google.visualization.Gauge(\n                    document.getElementById(\"gauge1\"));            \n                var chart2 = new google.visualization.Gauge(\n                    document.getElementById(\"gauge2\"));  \n                var chart3 = new google.visualization.Gauge(\n                    document.getElementById(\"gauge3\"));              \n                chart.draw(data, options);\n                chart1.draw(data1, options1);\n                chart2.draw(data2, options2);\n                chart3.draw(data3, options3);        \n            }\n        );\n        \n        // **** 時刻表示を毎秒コール　****\n        setInterval( \"myFunc()\", 1000 );\n        // **** 毎時、毎時30分に言葉送信　 ****\n        //setInterval( \"sendMessage()\", 1000 );       \n\n\n        \n    </script>\n    \n    \n    <!--/*%_skip_start_%*/-->\n    <script type=\"text/javascript\">\n    // **** ボタン類の表示初期設定\n        document.getElementById(\"peoplebutton\").style.display=\"none\";\n    </script>\n    \n\n</body>\n</html>\n<!--/*%_skip_end_%*/-->\n\n","output":"str","x":330,"y":120,"wires":[["9d53ef63.41d7b"]]},{"id":"7c857db9.373444","type":"mqtt-broker","z":"","name":"","broker":"mqtt.beebotte.com","port":"1883","clientid":"","usetls":false,"verifyservercert":true,"compatmode":true,"keepalive":"15","cleansession":true,"birthTopic":"","birthQos":"0","birthRetain":"false","birthPayload":"","closeTopic":"","closeRetain":"false","closePayload":"","willTopic":"","willQos":"0","willRetain":"false","willPayload":""}]
